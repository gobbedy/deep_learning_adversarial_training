#!/bin/bash

############################################################################################################
################ HELPER VARIABLES -- DO NOT CHANGE UNLESS YOU KNOW WHAT YOU'RE DOING #######################
############################################################################################################

# if one of the commands in a pipe (eg slurm.sh call at end of script) fails, the entire command returns non-zero code
# otherwise only the return code of last command would be returned regardless if some earlier commands in the pipe failed
set -o pipefail

# name of this script (simulation.sh)
me=$(basename ${0%%@@*})

# full path to this script, ie /path/to/simulation.sh
full_me=${0%%@@*}

# parent directory of this script, ie /path/to
me_dir=$(dirname $(readlink -f ${0%%@@*}))

# regression directory -- root directory where all simulations will go!
regress_dir=/scratch/y/yymao/${USER}/deep_learning

# datetime suffix, eg if we are November 14th, 6:56AM and 1 second -- datetime suffix is Nov14_065601
# will be used later to autogenerate a unique output directory
datetime_suffix=$(date +%b%d_%H%M%S)

############################################################################################################
######################################### PARSE ARGUMENTS ##################################################
###################################### YOU MUST CHANGE THIS!!! #############################################
############################################################################################################

function showHelp {

echo "NAME - DESCRIPTION

  $me -
     1) Creates output (regression) directory
     2) Launches SLURM job

SYNOPSIS

  $me [OPTIONS] --state_dim STATE_DIM --architecture ARCHITECTURE

OPTIONS

  -h, --help
                          Show this description
"
}

# parse arguments to be ultimately passed down to python script
# START CHANGES HERE
# END CHANGES HERE

while [[ "$1" == -* ]]; do
  case "$1" in
    -h|--help)
      showHelp
      exit 0
    ;;
	# START CHANGES HERE
	# END CHANGES HERE
    -*)
      die "Invalid option $1"
    ;;
  esac
done

# START CHANGES HERE
# Check that arguments are valid.
# END CHANGES HERE

############################################################################################################
####################### SIMULATION PARAMETERS -- YOU MUST CHANGE THESE!!! ##################################
############################################################################################################

# simulation parameters
nodes=1
cpus=80
gpus=0
time="00:15:00" # hours:minutes:seconds
mem=100gb
email=yes
test_mode=no
job_name="adversarial_project"

# your e-mail address is used by slurm.sh to e-mail you at start + end of simulation
# if you don't want an e-mail, set email=no above
#export EMAIL=youremail@uottawa.ca

# directory where simulation output will reside -- to be autogenerated
# change the end of it should always be beneath ${regress_dir} !!
output_dir=${regress_dir}/deep_learning/adversarial_project/${datetime_suffix}

# name of python script to be executed -- assumed to reside in current directory
# NOTE: This script will be copied to the output directory and the COPIED version will be executed
#       This allows you to continue working and not worry about when SLURM will launch your script.
python_script_name="mlp_regression.py"

# options to be passed into python script
python_options="--d ${me_dir}" # eg -h|--short, -s|--sanity, -p|--profile

############################################################################################################
################################### PREPARE THE JOB LAUNCH #################################################
############################ YOU PROBABLY DON'T NEED TO CHANGE THIS ########################################
############################################################################################################

# logfile where simulation output will reside
logfile=${output_dir}/${job_name}.log

# name of batch script to be called by sbatch command
sbatch_script_name="simulation.sbatch"

###### create regression output directory tree #####
if [[ ! -f ${output_dir} ]]; then
    mkdir -p ${output_dir}
    mkdir -p ${output_dir}/dispy
fi

# Copy current executables (assumed to be .py, .sh and .sbatch files in the current directory) to output_dir.
# In particular, the copied version of your 
# This serves as a snapshotting of current code for later debugging (useful when running simultaneous sims)
cp -p *py *sh *batch *torch ${output_dir}

# full path to copied python script
python_script_path=${output_dir}/${python_script_name}

# full path to copied sbatch script
sbatch_script_path=${output_dir}/${sbatch_script_name}

# prepare arguments to job script (slurm.sh)
export="python_script_path=\"${python_script_path}\",output_dir=\"${output_dir}\",python_options=\""${python_options}"\""
mail=''
if [[ ${email} == yes ]]; then
  mail="--mail"
fi
test=''
if [[ ${test_mode} == yes ]]; then
  test="--test"
fi

echo "${me}: JOB OUTPUT DIRECTORY:"
echo  ${output_dir}
echo ""

############################################################################################################
################################ LAUNCH THE JOB (ie call slurm.sh) #########################################
####################### DO NOT CHANGE UNLESS YOU KNOW WHAT YOU'RE DOING ####################################
############################################################################################################

# launch job (more exactly, call job launching script slurm.sh)
slurm.sh --cmd sbatch -t "${time}" -j "${job_name}" -o "${logfile}" -n "${nodes}" -c "${cpus}" -g "${gpus}" -m "${mem}" -e "${export}" ${mail} ${test} "${sbatch_script_path}" |& tee -a ${logfile}


# same logfile will be used to output job content -- add a header to separate this script's output from slurm.sh output
echo "" >> ${logfile}
echo "${me}: JOB OUTPUT:" >> ${logfile}